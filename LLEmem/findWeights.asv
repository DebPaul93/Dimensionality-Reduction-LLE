function W = findWeights(X,M)
%FINDCLOSESTCENTROIDS computes the centroid memberships for every example
%   idx = FINDCLOSESTCENTROIDS (X, centroids) returns the closest centroids
%   in idx for a dataset X where each row is a single example. idx = m x 1 
%   vector of centroid assignments (i.e. each entry in range [1..K])
%

% Set K

% You need to return the following variables correctly.


% ====================== YOUR CODE HERE ======================
% Instructions: Go over every example, find its closest centroid, and store
%               the index inside idx at the appropriate location.
%               Concretely, idx(i) should contain the index of the centroid
%               closest to example i. Hence, it should be a value in the 
%               range 1..K
%
% Note: You can use a for-loop over the examples to compute this.
%
[m1,K]=size(M);
[m2,n]=size(X);

if(K>n) 
  fprintf(1,'   [note: No. of Neighbours > Dimmension of input vectors; regularization will be used]\n'); 
  tol=1e-3; % regularlizer in case constrained fits are ill conditioned
else
  tol=0;
end
W = zeros(K,m1);
O = ones(K,1);
opts.UT = true; opts.TRANSA = true;
for i = 1:m1
   z = X(M(i,:),:)-repmat(X(i,:),K,1); % shift ith pt to origin
   C = z*z';                                        % local covariance
   C = C + eye(K,K)*tol*trace(C);                   % regularlization (K>D)
   %W(:,i) = C\ones(K,1);
   
   W(:,i) = linsolve(C,b,opts)% solve Cw=1
   W(:,i) = W(:,i)/sum(W(:,i));                  % enforce sum(w)=1

end


end